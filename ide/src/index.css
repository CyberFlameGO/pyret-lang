/* NOTE(joe): this file defines both the compact and normal modes for chatitor,
the shared styles explicitly list both modes, and the styles specific to a
mode just list that one. This avoids thinking too hard about rule specificity
and overriding of rules. */

.chatitor-container {
  display: grid;
  height: 100%;
  grid-template-rows: 1fr 0fr;
}

.progress-bar {
  background-color: rgb(67 236 150);
  transition: width 0.5s linear;
  width: 0;
  height: 0;
  position: absolute;
  /* Above chats but below header */
  z-index: 5;
  box-shadow: 0px 1px 2px rgb(67 236 150 / 50%);
  will-change: width;
}

.chat-scroll {
  width: 100%;
  overflow: auto;
  display: flex;
  flex-direction: column-reverse;
}

.chat-layout-compact .chats,
.chat-layout-normal .chats {
  max-width: 70%;
  margin: 2em auto;
  flex-grow: 1;
}

.chat-layout-compact .chats {
  width: 70em;
  min-width: 40em;
}
.chat-layout-normal .chats {
  width: 40em;
}

.chat-layout-compact .chat .CodeMirror,
.chat-layout-normal .chat .CodeMirror {
  /* TODO(luna): !important because they're getting overridden by page styles, as
   * they should be, but why are there page styles, and how can i override
   * correctly? */
  border: 1px solid transparent;
  display: inline-block;
  background-color: #d4f1ff !important;
  min-width: 0em;
  cursor: pointer !important;
  transition: border-radius 0.1s, border-bottom-left-radius 0.1s, min-width 0.1s -0.05s !important;
}

.chat-layout-normal .chat .CodeMirror {
  border-radius: 0.9em !important;
  border-bottom-left-radius: 0 !important;
  padding: 0.7em;
}

.chat-layout-compact .chat .CodeMirror {
  border-radius: 0.3em !important;
  border-bottom-left-radius: 0 !important;
  width: 100%;
}

.chat-layout-compact .chat .CodeMirror-lines,
.chat-layout-normal .chat .CodeMirror-lines {
  cursor: pointer;
}

.chat-layout-compact .chat .CodeMirror-focused,
.chat-layout-normal .chat .CodeMirror-focused {
  background-color: #f2fbff !important;
  min-width: 30em;
  border: 1px solid black;
}
.chat-layout-normal .chat .CodeMirror-focused {
  border-radius: 0.5em !important;
  border-bottom-left-radius: 0.5em;
}
.chat-layout-compact .chat .CodeMirror-focused {
  border-radius: 0.1em !important;
  border-bottom-left-radius: 0.1em;
}

.chat-layout-compact .chat-and-result {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  position: relative;
}
.chat-layout-normal .chat-and-result {
  display: flex;
  flex-direction: column;
  position: relative;
}

.chat-layout-compact .chat-result {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  max-width: 30%;
}
.chat-layout-normal .chat-result {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  margin-bottom: 0.5em;
}

.chat-layout-compact .chat-editor-wrapper {
  min-width: 30em;
  max-width: 70%;
}
.chat-layout-normal .chat-editor-wrapper {
  width: 100%;
}

.chat-layout-normal .chat .CodeMirror-focused .CodeMirror-lines {
  cursor: text;
}
.chat-layout-normal .chat.checkmark .CodeMirror {
  padding-right: 2em;
}
.chat-layout-normal .chat.checkmark .CodeMirror::after {
  content: "âœ“";
  display: block;
  position: relative;
  height: 0;
  top: -25px;
  text-align: right;
  color: green;
  margin-right: -1.2em;
}

.failure-cmcode .CodeMirror {
  background-color: transparent !important;
  border: transparent !important;
}

.new-expr .CodeMirror {
  background-color: white !important;
  border-radius: 1em !important;
  border: 1px solid black !important;
  /* This is a weird quirk of CodeMirror styles which set this to a value which
   * breaks non-inline positioned elements, but this !important override fixes it */
  min-height: 0 !important;
  padding: 1em;
  width: 45em;
  margin: 0 auto;
  transition: border-radius 0.1s;
}
.new-expr .CodeMirror-focused {
  border-radius: 0.5em !important;
}

.chat-layout-compact .chatitor-rhs,
.chat-layout-normal .chatitor-rhs {
  padding-left: 1em;
  border-radius: 0.5em;
  background-color: #eee;
  border-bottom-right-radius: 0;
  border: 1px solid transparent;
  margin: 0.15em 0;
  float: right;
  overflow: auto;
}
.chat-layout-compact .chatitor-rhs {
  padding: 0.3em;
  max-width: 100%;
}
.chat-layout-normal .chatitor-rhs {
  padding: 0.7em;
  max-width: 90%;
}

.chat-layout-compact .chatitor-rhs.pending,
.chat-layout-normal .chatitor-rhs.pending {
  background-color: transparent;
}
.chat-layout-compact .partially-outdated .chatitor-rhs,
.chat-layout-normal .partially-outdated .chatitor-rhs {
  border: 1px dashed black;
}
.chat-layout-compact .outdated .CodeMirror,
.chat-layout-normal .outdated .CodeMirror {
  border: 1px dashed black;
}

.chunks-rhs {
  padding-left: 1em;
  /* For positioning jitter */
  border-top: 2px solid rgba(0, 0, 0, 0);
  border-bottom: 2px solid rgba(0, 0, 0, 0);
}
.chunks-rhs-selected {
  background: #d7d4f0;
  border-top: 2px solid #c8c8c8;
  border-bottom: 2px solid #c8c8c8;
}

.list-container {
  width: 35em;
}

.menu-button:active {
  background: darkgrey !important;
}

.chat-layout-compact .insert-arrow {
  top: -0.5em;
}
.chat-layout-normal .insert-arrow {
  top: -1em;
}
.insert-arrow {
  position: absolute;
  left: -1.3em;
  font-size: 1em;
  opacity: 0.3;
  transition: opacity 0.2s;
  cursor: pointer;
  /* Button style reset */
  display: inline-block;
  border: none;
  margin: 0;
  padding: 0;
  line-height: normal;
  background-color: transparent;
}
.insert-arrow:hover {
  opacity: 1;
}